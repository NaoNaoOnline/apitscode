// @generated by protobuf-ts 2.9.0 with parameter output_javascript
// @generated from protobuf file "pbf/event/delete.proto" (package "event", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * DeleteI is the input for deleting events.
 *
 *     {
 *         "object": [
 *             {
 *                 "intern": {
 *                     "event.naonao.online/id": "<id>"
 *                 }
 *             }
 *         ]
 *     }
 *
 *
 * @generated from protobuf message event.DeleteI
 */
export interface DeleteI {
  /**
   * @generated from protobuf field: event.DeleteI_Filter filter = 1;
   */
  filter?: DeleteI_Filter;
  /**
   * @generated from protobuf field: repeated event.DeleteI_Object object = 2;
   */
  object: DeleteI_Object[];
}
/**
 * @generated from protobuf message event.DeleteI_Filter
 */
export interface DeleteI_Filter {}
/**
 * @generated from protobuf message event.DeleteI_Object
 */
export interface DeleteI_Object {
  /**
   * @generated from protobuf field: map<string, string> intern = 1;
   */
  intern: {
    [key: string]: string;
  };
  /**
   * @generated from protobuf field: event.DeleteI_Object_Public public = 2;
   */
  public?: DeleteI_Object_Public;
}
/**
 * @generated from protobuf message event.DeleteI_Object_Public
 */
export interface DeleteI_Object_Public {}
/**
 * DeleteO is the output for deleting events.
 *
 *     {
 *         "object": [
 *             {
 *                 "intern": {
 *                     "event.naonao.online/status": "deleted"
 *                 }
 *             }
 *         ]
 *     }
 *
 *
 * @generated from protobuf message event.DeleteO
 */
export interface DeleteO {
  /**
   * @generated from protobuf field: event.DeleteO_Filter filter = 1;
   */
  filter?: DeleteO_Filter;
  /**
   * @generated from protobuf field: repeated event.DeleteO_Object object = 2;
   */
  object: DeleteO_Object[];
}
/**
 * @generated from protobuf message event.DeleteO_Filter
 */
export interface DeleteO_Filter {}
/**
 * @generated from protobuf message event.DeleteO_Object
 */
export interface DeleteO_Object {
  /**
   * @generated from protobuf field: map<string, string> intern = 1;
   */
  intern: {
    [key: string]: string;
  };
  /**
   * @generated from protobuf field: event.DeleteO_Object_Public public = 2;
   */
  public?: DeleteO_Object_Public;
}
/**
 * @generated from protobuf message event.DeleteO_Object_Public
 */
export interface DeleteO_Object_Public {}
declare class DeleteI$Type extends MessageType<DeleteI> {
  constructor();
  create(value?: PartialMessage<DeleteI>): DeleteI;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteI,
  ): DeleteI;
  internalBinaryWrite(
    message: DeleteI,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteI
 */
export declare const DeleteI: DeleteI$Type;
declare class DeleteI_Filter$Type extends MessageType<DeleteI_Filter> {
  constructor();
  create(value?: PartialMessage<DeleteI_Filter>): DeleteI_Filter;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteI_Filter,
  ): DeleteI_Filter;
  internalBinaryWrite(
    message: DeleteI_Filter,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteI_Filter
 */
export declare const DeleteI_Filter: DeleteI_Filter$Type;
declare class DeleteI_Object$Type extends MessageType<DeleteI_Object> {
  constructor();
  create(value?: PartialMessage<DeleteI_Object>): DeleteI_Object;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteI_Object,
  ): DeleteI_Object;
  private binaryReadMap1;
  internalBinaryWrite(
    message: DeleteI_Object,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteI_Object
 */
export declare const DeleteI_Object: DeleteI_Object$Type;
declare class DeleteI_Object_Public$Type extends MessageType<DeleteI_Object_Public> {
  constructor();
  create(value?: PartialMessage<DeleteI_Object_Public>): DeleteI_Object_Public;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteI_Object_Public,
  ): DeleteI_Object_Public;
  internalBinaryWrite(
    message: DeleteI_Object_Public,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteI_Object_Public
 */
export declare const DeleteI_Object_Public: DeleteI_Object_Public$Type;
declare class DeleteO$Type extends MessageType<DeleteO> {
  constructor();
  create(value?: PartialMessage<DeleteO>): DeleteO;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteO,
  ): DeleteO;
  internalBinaryWrite(
    message: DeleteO,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteO
 */
export declare const DeleteO: DeleteO$Type;
declare class DeleteO_Filter$Type extends MessageType<DeleteO_Filter> {
  constructor();
  create(value?: PartialMessage<DeleteO_Filter>): DeleteO_Filter;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteO_Filter,
  ): DeleteO_Filter;
  internalBinaryWrite(
    message: DeleteO_Filter,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteO_Filter
 */
export declare const DeleteO_Filter: DeleteO_Filter$Type;
declare class DeleteO_Object$Type extends MessageType<DeleteO_Object> {
  constructor();
  create(value?: PartialMessage<DeleteO_Object>): DeleteO_Object;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteO_Object,
  ): DeleteO_Object;
  private binaryReadMap1;
  internalBinaryWrite(
    message: DeleteO_Object,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteO_Object
 */
export declare const DeleteO_Object: DeleteO_Object$Type;
declare class DeleteO_Object_Public$Type extends MessageType<DeleteO_Object_Public> {
  constructor();
  create(value?: PartialMessage<DeleteO_Object_Public>): DeleteO_Object_Public;
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteO_Object_Public,
  ): DeleteO_Object_Public;
  internalBinaryWrite(
    message: DeleteO_Object_Public,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message event.DeleteO_Object_Public
 */
export declare const DeleteO_Object_Public: DeleteO_Object_Public$Type;
export {};
